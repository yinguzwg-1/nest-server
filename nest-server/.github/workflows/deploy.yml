name: Deploy Next.js and Nest.js Services

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}

permissions:
  contents: read
  packages: write

jobs:
  # 构建和测试 Next.js 应用
  build-nextjs:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./airbnb-video
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './airbnb-video/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Build Next.js application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nextjs-build
        path: ./airbnb-video/.next
        retention-days: 1

  # 构建和测试 Nest.js 服务
  build-nestjs:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./nest-server/nest-server
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './nest-server/nest-server/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Build Nest.js application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nestjs-build
        path: ./nest-server/nest-server/dist
        retention-days: 1

  # 构建 Docker 镜像
  build-docker:
    needs: [build-nextjs, build-nestjs]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: nextjs-build
        path: ./airbnb-video/.next

    - name: Download Nest.js build artifacts
      uses: actions/download-artifact@v4
      with:
        name: nestjs-build
        path: ./nest-server/nest-server/dist

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Next.js Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./airbnb-video
        file: ./airbnb-video/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/airbnb-video:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Nest.js Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./nest-server/nest-server
        file: ./nest-server/nest-server/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/nestjs:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # 部署到服务器
  deploy:
    needs: [build-docker]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          # 更新代码
          cd /path/to/your/project
          git pull origin main
          
          # 停止现有服务
          docker-compose down
          
          # 拉取最新镜像
          docker-compose pull
          
          # 启动服务
          docker-compose up -d
          
          # 清理未使用的镜像
          docker image prune -f 